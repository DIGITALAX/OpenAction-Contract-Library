// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CurrencyAdded extends ethereum.Event {
  get params(): CurrencyAdded__Params {
    return new CurrencyAdded__Params(this);
  }
}

export class CurrencyAdded__Params {
  _event: CurrencyAdded;

  constructor(event: CurrencyAdded) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CurrencyRemoved extends ethereum.Event {
  get params(): CurrencyRemoved__Params {
    return new CurrencyRemoved__Params(this);
  }
}

export class CurrencyRemoved__Params {
  _event: CurrencyRemoved;

  constructor(event: CurrencyRemoved) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DesignerSplitSet extends ethereum.Event {
  get params(): DesignerSplitSet__Params {
    return new DesignerSplitSet__Params(this);
  }
}

export class DesignerSplitSet__Params {
  _event: DesignerSplitSet;

  constructor(event: DesignerSplitSet) {
    this._event = event;
  }

  get designer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get printType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get split(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FulfillerBaseSet extends ethereum.Event {
  get params(): FulfillerBaseSet__Params {
    return new FulfillerBaseSet__Params(this);
  }
}

export class FulfillerBaseSet__Params {
  _event: FulfillerBaseSet;

  constructor(event: FulfillerBaseSet) {
    this._event = event;
  }

  get fulfiller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get printType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get split(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FulfillerSplitSet extends ethereum.Event {
  get params(): FulfillerSplitSet__Params {
    return new FulfillerSplitSet__Params(this);
  }
}

export class FulfillerSplitSet__Params {
  _event: FulfillerSplitSet;

  constructor(event: FulfillerSplitSet) {
    this._event = event;
  }

  get fulfiller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get printType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get split(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OracleUpdated extends ethereum.Event {
  get params(): OracleUpdated__Params {
    return new OracleUpdated__Params(this);
  }
}

export class OracleUpdated__Params {
  _event: OracleUpdated;

  constructor(event: OracleUpdated) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TreasurySplitSet extends ethereum.Event {
  get params(): TreasurySplitSet__Params {
    return new TreasurySplitSet__Params(this);
  }
}

export class TreasurySplitSet__Params {
  _event: TreasurySplitSet;

  constructor(event: TreasurySplitSet) {
    this._event = event;
  }

  get treasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get printType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get split(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PrintSplitData extends ethereum.SmartContract {
  static bind(address: Address): PrintSplitData {
    return new PrintSplitData("PrintSplitData", address);
  }

  getAllCurrencies(): Array<Address> {
    let result = super.call(
      "getAllCurrencies",
      "getAllCurrencies():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAllCurrencies(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllCurrencies",
      "getAllCurrencies():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getDesignerSplit(_address: Address, _printType: i32): BigInt {
    let result = super.call(
      "getDesignerSplit",
      "getDesignerSplit(address,uint8):(uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_printType))
      ]
    );

    return result[0].toBigInt();
  }

  try_getDesignerSplit(
    _address: Address,
    _printType: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDesignerSplit",
      "getDesignerSplit(address,uint8):(uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_printType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFulfillerBase(_address: Address, _printType: i32): BigInt {
    let result = super.call(
      "getFulfillerBase",
      "getFulfillerBase(address,uint8):(uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_printType))
      ]
    );

    return result[0].toBigInt();
  }

  try_getFulfillerBase(
    _address: Address,
    _printType: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFulfillerBase",
      "getFulfillerBase(address,uint8):(uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_printType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFulfillerSplit(_address: Address, _printType: i32): BigInt {
    let result = super.call(
      "getFulfillerSplit",
      "getFulfillerSplit(address,uint8):(uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_printType))
      ]
    );

    return result[0].toBigInt();
  }

  try_getFulfillerSplit(
    _address: Address,
    _printType: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFulfillerSplit",
      "getFulfillerSplit(address,uint8):(uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_printType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIsCurrency(_address: Address): boolean {
    let result = super.call("getIsCurrency", "getIsCurrency(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBoolean();
  }

  try_getIsCurrency(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getIsCurrency",
      "getIsCurrency(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRateByCurrency(_currency: Address): BigInt {
    let result = super.call(
      "getRateByCurrency",
      "getRateByCurrency(address):(uint256)",
      [ethereum.Value.fromAddress(_currency)]
    );

    return result[0].toBigInt();
  }

  try_getRateByCurrency(_currency: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRateByCurrency",
      "getRateByCurrency(address):(uint256)",
      [ethereum.Value.fromAddress(_currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTreasurySplit(_address: Address, _printType: i32): BigInt {
    let result = super.call(
      "getTreasurySplit",
      "getTreasurySplit(address,uint8):(uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_printType))
      ]
    );

    return result[0].toBigInt();
  }

  try_getTreasurySplit(
    _address: Address,
    _printType: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTreasurySplit",
      "getTreasurySplit(address,uint8):(uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_printType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWeiByCurrency(_currency: Address): BigInt {
    let result = super.call(
      "getWeiByCurrency",
      "getWeiByCurrency(address):(uint256)",
      [ethereum.Value.fromAddress(_currency)]
    );

    return result[0].toBigInt();
  }

  try_getWeiByCurrency(_currency: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getWeiByCurrency",
      "getWeiByCurrency(address):(uint256)",
      [ethereum.Value.fromAddress(_currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  printAccessControl(): Address {
    let result = super.call(
      "printAccessControl",
      "printAccessControl():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_printAccessControl(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "printAccessControl",
      "printAccessControl():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _printAccessControlAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddCurrencyCall extends ethereum.Call {
  get inputs(): AddCurrencyCall__Inputs {
    return new AddCurrencyCall__Inputs(this);
  }

  get outputs(): AddCurrencyCall__Outputs {
    return new AddCurrencyCall__Outputs(this);
  }
}

export class AddCurrencyCall__Inputs {
  _call: AddCurrencyCall;

  constructor(call: AddCurrencyCall) {
    this._call = call;
  }

  get _currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _weiAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddCurrencyCall__Outputs {
  _call: AddCurrencyCall;

  constructor(call: AddCurrencyCall) {
    this._call = call;
  }
}

export class RemoveCurrencyCall extends ethereum.Call {
  get inputs(): RemoveCurrencyCall__Inputs {
    return new RemoveCurrencyCall__Inputs(this);
  }

  get outputs(): RemoveCurrencyCall__Outputs {
    return new RemoveCurrencyCall__Outputs(this);
  }
}

export class RemoveCurrencyCall__Inputs {
  _call: RemoveCurrencyCall;

  constructor(call: RemoveCurrencyCall) {
    this._call = call;
  }

  get _currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveCurrencyCall__Outputs {
  _call: RemoveCurrencyCall;

  constructor(call: RemoveCurrencyCall) {
    this._call = call;
  }
}

export class SetDesignerSplitCall extends ethereum.Call {
  get inputs(): SetDesignerSplitCall__Inputs {
    return new SetDesignerSplitCall__Inputs(this);
  }

  get outputs(): SetDesignerSplitCall__Outputs {
    return new SetDesignerSplitCall__Outputs(this);
  }
}

export class SetDesignerSplitCall__Inputs {
  _call: SetDesignerSplitCall;

  constructor(call: SetDesignerSplitCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _printType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetDesignerSplitCall__Outputs {
  _call: SetDesignerSplitCall;

  constructor(call: SetDesignerSplitCall) {
    this._call = call;
  }
}

export class SetFulfillerBaseCall extends ethereum.Call {
  get inputs(): SetFulfillerBaseCall__Inputs {
    return new SetFulfillerBaseCall__Inputs(this);
  }

  get outputs(): SetFulfillerBaseCall__Outputs {
    return new SetFulfillerBaseCall__Outputs(this);
  }
}

export class SetFulfillerBaseCall__Inputs {
  _call: SetFulfillerBaseCall;

  constructor(call: SetFulfillerBaseCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _printType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetFulfillerBaseCall__Outputs {
  _call: SetFulfillerBaseCall;

  constructor(call: SetFulfillerBaseCall) {
    this._call = call;
  }
}

export class SetFulfillerSplitCall extends ethereum.Call {
  get inputs(): SetFulfillerSplitCall__Inputs {
    return new SetFulfillerSplitCall__Inputs(this);
  }

  get outputs(): SetFulfillerSplitCall__Outputs {
    return new SetFulfillerSplitCall__Outputs(this);
  }
}

export class SetFulfillerSplitCall__Inputs {
  _call: SetFulfillerSplitCall;

  constructor(call: SetFulfillerSplitCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _printType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetFulfillerSplitCall__Outputs {
  _call: SetFulfillerSplitCall;

  constructor(call: SetFulfillerSplitCall) {
    this._call = call;
  }
}

export class SetOraclePriceUSDCall extends ethereum.Call {
  get inputs(): SetOraclePriceUSDCall__Inputs {
    return new SetOraclePriceUSDCall__Inputs(this);
  }

  get outputs(): SetOraclePriceUSDCall__Outputs {
    return new SetOraclePriceUSDCall__Outputs(this);
  }
}

export class SetOraclePriceUSDCall__Inputs {
  _call: SetOraclePriceUSDCall;

  constructor(call: SetOraclePriceUSDCall) {
    this._call = call;
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _rate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetOraclePriceUSDCall__Outputs {
  _call: SetOraclePriceUSDCall;

  constructor(call: SetOraclePriceUSDCall) {
    this._call = call;
  }
}

export class SetPrintAccessControlAddressCall extends ethereum.Call {
  get inputs(): SetPrintAccessControlAddressCall__Inputs {
    return new SetPrintAccessControlAddressCall__Inputs(this);
  }

  get outputs(): SetPrintAccessControlAddressCall__Outputs {
    return new SetPrintAccessControlAddressCall__Outputs(this);
  }
}

export class SetPrintAccessControlAddressCall__Inputs {
  _call: SetPrintAccessControlAddressCall;

  constructor(call: SetPrintAccessControlAddressCall) {
    this._call = call;
  }

  get _newPrintAccessControlAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPrintAccessControlAddressCall__Outputs {
  _call: SetPrintAccessControlAddressCall;

  constructor(call: SetPrintAccessControlAddressCall) {
    this._call = call;
  }
}

export class SetTreasurySplitCall extends ethereum.Call {
  get inputs(): SetTreasurySplitCall__Inputs {
    return new SetTreasurySplitCall__Inputs(this);
  }

  get outputs(): SetTreasurySplitCall__Outputs {
    return new SetTreasurySplitCall__Outputs(this);
  }
}

export class SetTreasurySplitCall__Inputs {
  _call: SetTreasurySplitCall;

  constructor(call: SetTreasurySplitCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _printType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetTreasurySplitCall__Outputs {
  _call: SetTreasurySplitCall;

  constructor(call: SetTreasurySplitCall) {
    this._call = call;
  }
}
